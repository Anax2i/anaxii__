name: osu-wiki continuous integration

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - edited

jobs:
  check_file_sizes:
    name: File sizes
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Inspect file sizes
        shell: bash
        run: |
          readarray -t changed_files <<< "$( git diff --no-renames --name-only --diff-filter=d ${{ github.sha }}^ )"
          bash scripts/ci/inspect_file_sizes.sh --target "${changed_files[@]}"

  check_markdown_style:
    name: Markdown style
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        id: setup-node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16

      - name: Load node_modules from cache
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package.json', 'package-lock.json') }}-${{ steps.setup-node.outputs.node-version }}

      - name: Install Markdown linters
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check Markdown style
        run: |
          readarray -t markdown_files <<< $(
            git diff --no-renames --name-only --diff-filter=d ${{ github.sha }}^ \
              | grep -e .md$ || true
          )
          bash scripts/ci/run_remark.sh --target "${markdown_files[@]}"

  check_yaml:
    name: YAML and front matter
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          cache: pip
          cache-dependency-path: scripts/requirements.txt
          python-version: 3.x

      - name: Install Python packages
        run: pip install -r scripts/requirements.txt

      - name: Run yamllint on .yaml and .md files
        run: |
          readarray -t files_with_yaml <<< $(
            git diff --no-renames --name-only --diff-filter=d ${{ github.sha }}^ \
              | grep -e .yaml$ -e .yml$ -e .md$ || true
          )
          python scripts/ci/run_yamllint.py --config .yamllint.yaml --target "${files_with_yaml[@]}"

  check_links:
    name: Links
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          cache: pip
          cache-dependency-path: scripts/requirements.txt
          python-version: 3.x

      - name: Install Python packages
        run: pip install -r scripts/requirements.txt

      - name: Find broken wikilinks
        shell: bash
        env:
          PULL_REQUEST_TAG: 'SKIP_WIKILINK_CHECK'
        run: |
          if ${{ contains(github.event.pull_request.body, env.PULL_REQUEST_TAG) }}; then
            echo "::notice::Broken wikilink check suppressed ($PULL_REQUEST_TAG tag found in the pull request)"
            exit 0
          fi

          readarray -t articles <<< $(
            git diff --no-renames --name-only --diff-filter=d ${{ github.sha }}^ \
              | grep -e ^wiki/ -e ^news/ | grep .md$ || true
          )
          osu-wiki-tools check-links --target "${articles[@]}"

  check_outdated_markers:
    name: Outdated articles
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          cache: pip
          cache-dependency-path: scripts/requirements.txt
          python-version: 3.x

      - name: Install Python packages
        run: pip install -r scripts/requirements.txt

      - name: Check if translations are marked as outdated
        shell: bash
        env:
          PULL_REQUEST_TAG: 'SKIP_OUTDATED_CHECK'
        run: |
          if ${{ contains(github.event.pull_request.body, env.PULL_REQUEST_TAG) }}; then
            echo "::notice::Outdated articles check suppressed ($PULL_REQUEST_TAG tag found in the pull request)"
            exit 0
          fi

          # get the first commit of the branch associated with the PR; GitHub's ubuntu-latest has curl/jq: https://github.com/actions/virtual-environments
          FIRST_PR_COMMIT_HASH=$( curl -sS ${{ github.event.pull_request.commits_url }}?per_page=1 | jq -r '.[0].sha' || true )
          osu-wiki-tools check-outdated-articles --workflow --base-commit ${{ github.sha }} --outdated-since $FIRST_PR_COMMIT_HASH
